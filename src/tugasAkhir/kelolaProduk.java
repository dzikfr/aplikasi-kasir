/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package tugasAkhir;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADVAN
 */
public class kelolaProduk extends javax.swing.JInternalFrame {

    /**
     * Creates new form kelolaProduk
     */
    public kelolaProduk() {
        initComponents();
        loadKelolaProduct();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        keluar = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        tambah = new javax.swing.JButton();

        setTitle("Kelola Produk");
        setName("Kelola Produk"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        productTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Barang", "Harga", "Satuan", "Stok"
            }
        ));
        productTable.setToolTipText("");
        productTable.setInheritsPopupMenu(true);
        productTable.setName(""); // NOI18N
        productTable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        productTable.setShowGrid(false);
        productTable.setShowHorizontalLines(true);
        productTable.setShowVerticalLines(true);
        jScrollPane1.setViewportView(productTable);
        productTable.getAccessibleContext().setAccessibleName("");

        keluar.setText("KELUAR");
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });

        hapus.setText("HAPUS");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        tambah.setText("TAMBAH");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138)
                        .addComponent(hapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keluar)
                    .addComponent(hapus)
                    .addComponent(tambah))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadKelolaProduct(){
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        model.setRowCount(0);

        try (Connection conn = DatabaseConnection.getConnection(); Statement stmt = conn.createStatement()) {
            String query = "SELECT nama_barang, harga, satuan, stok FROM barang";
            ResultSet rsl = stmt.executeQuery(query);

            while (rsl.next()) {
                String nama_barang = rsl.getString("nama_barang");
                String harga = rsl.getString("harga");
                String satuan = rsl.getString("satuan");
                int stok = rsl.getInt("stok");

                model.addRow(new Object[]{nama_barang, harga, satuan, stok});
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error retrieving data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        String namaProduk = JOptionPane.showInputDialog("Masukkan Nama Produk:");
        String harga = JOptionPane.showInputDialog("Masukkan Harga Produk:");
        String satuan = JOptionPane.showInputDialog("Masukkan Satuan Produk:");
        String stok = JOptionPane.showInputDialog("Masukkan Stok Produk:");

        if (namaProduk != null && harga != null && satuan != null && stok != null &&
            !namaProduk.isEmpty() && !harga.isEmpty() && !satuan.isEmpty() && !stok.isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) productTable.getModel();
            model.addRow(new Object[]{namaProduk, harga, satuan, stok});

        } else {
            JOptionPane.showMessageDialog(null, "Semua bidang harus diisi", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
          try {
            Connection conn = getConnection();
            String sql = "INSERT INTO barang(nama_barang, harga, satuan, stok) VALUES (?, ?, ?, ?)";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, namaProduk);
            statement.setString(2, harga);
            statement.setString(3, satuan);
            statement.setString(4, stok);
            statement.executeUpdate();
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, " Gagal menyimpan " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_tambahActionPerformed
    
    private Connection getConnection() throws SQLException {
            String url = "jdbc:mysql://localhost:3306/shop_db";
            String username = "root";
            String password = "";
            return DriverManager.getConnection(url, username, password);
        }
    
    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        dispose();
    }//GEN-LAST:event_keluarActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        int selectedRow = productTable.getSelectedRow();
                if (selectedRow != -1) {
                    DefaultTableModel tableModel = (DefaultTableModel) productTable.getModel();
                    tableModel.removeRow(selectedRow);
                } else {
                    JOptionPane.showMessageDialog(null, "Pilih baris yang ingin dihapus", "Kesalahan", JOptionPane.ERROR_MESSAGE);
                }
    }//GEN-LAST:event_hapusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hapus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton keluar;
    private javax.swing.JTable productTable;
    private javax.swing.JButton tambah;
    // End of variables declaration//GEN-END:variables
}
